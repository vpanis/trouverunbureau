

Failures:

  1) SpaceSearch search setting only capacity_max returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:352:in `block (3 levels) in <top (required)>'

  2) SpaceSearch search setting only capacity_max returns the spaces with capacity lower or equal than 3 when setted to 3
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2, @s1_v3, @s2_v3,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" <= 3 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:340:in `block (3 levels) in <top (required)>'

  3) SpaceSearch search setting only capacity_max returns an empty array when there are no spaces with that capacity
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" <= 0 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:347:in `block (3 levels) in <top (required)>'

  4) SpaceSearch search setting only capacity_max returns the spaces with capacity lower or equal than 4 when setted to 4
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2, @s1_v3, @s2_v3,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" <= 4 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:333:in `block (3 levels) in <top (required)>'

  5) SpaceSearch search setting only venue_professions returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:269:in `block (3 levels) in <top (required)>'

  6) SpaceSearch search setting only venue_professions returns the spaces that contains 'entertainment'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v3, @s2_v3)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['entertainment'] && venues.professions)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:259:in `block (3 levels) in <top (required)>'

  7) SpaceSearch search setting only venue_professions returns the spaces that contains 'entertainment' or 'technology'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v3, @s2_v3, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['entertainment','technology'] && venues.professions)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:264:in `block (3 levels) in <top (required)>'

  8) SpaceSearch search setting only venue_professions returns the spaces that contains 'technology'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['technology'] && venues.professions)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:254:in `block (3 levels) in <top (required)>'

  9) SpaceSearch search setting only quantity returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:378:in `block (3 levels) in <top (required)>'

  10) SpaceSearch search setting only quantity returns the spaces with quantity greater than 2 when setted to 3
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v3, @s2_v3, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."quantity" >= 3 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:368:in `block (3 levels) in <top (required)>'

  11) SpaceSearch search setting only quantity returns an empty array when there are no spaces with that quantity
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."quantity" >= 10 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:373:in `block (3 levels) in <top (required)>'

  12) SpaceSearch search setting only quantity returns the spaces with quantity greater than 3 when setted to 4
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."quantity" >= 4 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:363:in `block (3 levels) in <top (required)>'

  13) SpaceSearch search setting only weekday returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:404:in `block (3 levels) in <top (required)>'

  14) SpaceSearch search setting only weekday returns the spaces with venue hours weekday 1
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v2, @s2_v2, @s1_v8, @s1_v11, @s1_v12)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 1  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:394:in `block (3 levels) in <top (required)>'

  15) SpaceSearch search setting only weekday returns an empty array when there are no spaces with that weekday
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 6  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:399:in `block (3 levels) in <top (required)>'

  16) SpaceSearch search setting only weekday returns the spaces with venue hours weekday 0
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 0  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:389:in `block (3 levels) in <top (required)>'

  17) SpaceSearch search setting only venue_amenities returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:243:in `block (3 levels) in <top (required)>'

  18) SpaceSearch search setting only venue_amenities returns the spaces that contains 'cafe_restaurant'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v2, @s2_v2, @s1_v5, @s1_v6, @s1_v11, @s1_v12)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['cafe_restaurant'] <@ venues.amenities)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:233:in `block (3 levels) in <top (required)>'

  19) SpaceSearch search setting only venue_amenities returns the spaces with 'gym' and 'wifi'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['gym','wifi'] <@ venues.amenities)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:238:in `block (3 levels) in <top (required)>'

  20) SpaceSearch search setting only venue_amenities returns the spaces that contains 'wifi'
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v4, @s2_v4, @s1_v7, @s1_v9)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (ARRAY['wifi'] <@ venues.amenities)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:228:in `block (3 levels) in <top (required)>'

  21) SpaceSearch search setting only space_types returns the spaces with :hot_desk
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s1_v2, @s1_v7, @s1_v8,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 4))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:117:in `block (3 levels) in <top (required)>'

  22) SpaceSearch search setting only space_types returns the spaces with :conference_room
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s2_v3, @s1_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 0))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:133:in `block (3 levels) in <top (required)>'

  23) SpaceSearch search setting only space_types returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:144:in `block (3 levels) in <top (required)>'

  24) SpaceSearch search setting only space_types returns the spaces with :private_office
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s2_v1, @s1_v3, @s1_v5, @s1_v6)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 2))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:123:in `block (3 levels) in <top (required)>'

  25) SpaceSearch search setting only space_types returns the spaces with :meeting_room
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s2_v2, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 1))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:128:in `block (3 levels) in <top (required)>'

  26) SpaceSearch search setting only space_types returns the spaces with :private_office or :hot_desk
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s1_v2, @s2_v1, @s1_v3, @s1_v5, @s1_v6,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 2 OR "spaces"."s_type" = 4))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:138:in `block (3 levels) in <top (required)>'

  27) SpaceSearch search setting only venue_types returns the spaces with :apartment
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v9)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 7))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:191:in `block (3 levels) in <top (required)>'

  28) SpaceSearch search setting only venue_types returns the spaces with :design_studio or :startup_office
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 5 OR "venues"."v_type" = 1))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:212:in `block (3 levels) in <top (required)>'

  29) SpaceSearch search setting only venue_types returns the spaces with :corporate_office
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v5)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 3))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:171:in `block (3 levels) in <top (required)>'

  30) SpaceSearch search setting only venue_types returns the spaces with :coworking_space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v8)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 0))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:186:in `block (3 levels) in <top (required)>'

  31) SpaceSearch search setting only venue_types returns the spaces with :house
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v10)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 8))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:196:in `block (3 levels) in <top (required)>'

  32) SpaceSearch search setting only venue_types returns the spaces with :business_center
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v3, @s2_v3)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 4))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:166:in `block (3 levels) in <top (required)>'

  33) SpaceSearch search setting only venue_types returns the spaces with :startup_office
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 1))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:156:in `block (3 levels) in <top (required)>'

  34) SpaceSearch search setting only venue_types returns the spaces with :design_studio
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v2, @s2_v2)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 5))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:161:in `block (3 levels) in <top (required)>'

  35) SpaceSearch search setting only venue_types returns the spaces with :loft
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v7)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 6))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:181:in `block (3 levels) in <top (required)>'

  36) SpaceSearch search setting only venue_types returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:217:in `block (3 levels) in <top (required)>'

  37) SpaceSearch search setting only venue_types returns the spaces with :cafe
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v11)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 9))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:201:in `block (3 levels) in <top (required)>'

  38) SpaceSearch search setting only venue_types returns the spaces with :restaurant
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v12)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 10))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:206:in `block (3 levels) in <top (required)>'

  39) SpaceSearch search setting only venue_types returns the spaces with :hotel
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v6)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("venues"."v_type" = 2))  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:176:in `block (3 levels) in <top (required)>'

  40) SpaceSearch search setting only capacity_min returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:322:in `block (3 levels) in <top (required)>'

  41) SpaceSearch search setting only capacity_min returns the spaces with capacity greater than 2 when setted to 3
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v3, @s2_v3, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" >= 3 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:312:in `block (3 levels) in <top (required)>'

  42) SpaceSearch search setting only capacity_min returns an empty array when there are no spaces with that capacity
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" >= 10 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:317:in `block (3 levels) in <top (required)>'

  43) SpaceSearch search setting only capacity_min returns the spaces with capacity greater than 3 when setted to 4
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."capacity" >= 4 AND "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:307:in `block (3 levels) in <top (required)>'

  44) SpaceSearch search setting multiple fields returns the spaces ordered by quantity_reviews and rating
     Failure/Error: expect(ss.find_spaces).to match_array([@s1_v4, @s1_v1, @s1_v7, @s1_v9])
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (("spaces"."s_type" = 4 OR "spaces"."s_type" = 0)) AND (ARRAY['wifi'] <@ venues.amenities)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:455:in `block (3 levels) in <top (required)>'

  45) SpaceSearch search setting multiple fields returns the spaces with weekday monday, startup_office, 'wifi', and a conference_room
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 0 AND (("spaces"."s_type" = 0)) AND (("venues"."v_type" = 1)) AND (ARRAY['wifi'] <@ venues.amenities)  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:448:in `block (3 levels) in <top (required)>'

  46) SpaceSearch search setting only date returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:433:in `block (3 levels) in <top (required)>'

  47) SpaceSearch search setting only date returns the spaces with venue hours with weekday tuesday
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v2, @s2_v2, @s1_v8, @s1_v11, @s1_v12)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 1  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:422:in `block (3 levels) in <top (required)>'

  48) SpaceSearch search setting only date returns an empty array when there are no spaces with weekday sunday
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 6  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:428:in `block (3 levels) in <top (required)>'

  49) SpaceSearch search setting only date returns the spaces with venue hours with weekday monday
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v4, @s2_v4)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" INNER JOIN "venue_hours" ON "venue_hours"."venue_id" = "venues"."id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venue_hours"."weekday" = 0  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:416:in `block (3 levels) in <top (required)>'

  50) SpaceSearch search setting only latitude and longitude returns every space
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2,
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't'  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:296:in `block (3 levels) in <top (required)>'

  51) SpaceSearch search setting only latitude and longitude returns the spaces between (5,5) and (25, 25)
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1, @s1_v2, @s2_v2)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venues"."longitude" >= 5 AND "venues"."longitude" <= 25 AND "venues"."latitude" >= 5 AND "venues"."latitude" <= 25  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:285:in `block (3 levels) in <top (required)>'

  52) SpaceSearch search setting only latitude and longitude returns an empty array between (0,0) and (5, 5)
     Failure/Error: expect(ss.find_spaces).to contain_exactly
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venues"."longitude" >= 0 AND "venues"."longitude" <= 5 AND "venues"."latitude" >= 0 AND "venues"."latitude" <= 5  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:290:in `block (3 levels) in <top (required)>'

  53) SpaceSearch search setting only latitude and longitude returns the spaces between (5,5) and (15, 15)
     Failure/Error: expect(ss.find_spaces).to contain_exactly(@s1_v1, @s2_v1)
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT "spaces".* FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND "venues"."longitude" >= 5 AND "venues"."longitude" <= 15 AND "venues"."latitude" >= 5 AND "venues"."latitude" <= 15  ORDER BY venues.quantity_reviews DESC,
                        ((venues.rating + 1) * COALESCE(referral_stats.multiplier, 1))  DESC
     # ./spec/models/space_search_spec.rb:280:in `block (3 levels) in <top (required)>'

  54) ReferralStat When invitations were made When an invitation has been accepted should set the multiplier equal to #accepted_invitations/#total_accepted_invitations
     Failure/Error: ReferralStat.refresh_view
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:57:in `block (4 levels) in <top (required)>'

  55) ReferralStat When invitations were made When an invitation was accepted more than a month ago does not take into account the invitation
     Failure/Error: ReferralStat.refresh_view
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:72:in `block (4 levels) in <top (required)>'

  56) ReferralStat When invitations were made When no invitation has been accepted Keeps the user's venue multiplier equal to 1
     Failure/Error: before(:each) { ReferralStat.refresh_view }
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:46:in `block (4 levels) in <top (required)>'

  57) ReferralStat When no invitations have been made When the user has more than one venue creates one stat per venue
     Failure/Error: before(:each) { ReferralStat.refresh_view }
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:27:in `block (4 levels) in <top (required)>'

  58) ReferralStat When no invitations have been made When the user has more than one venue creates a stat with a multiplier equal to 1 for all venues
     Failure/Error: before(:each) { ReferralStat.refresh_view }
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:27:in `block (4 levels) in <top (required)>'

  59) ReferralStat When no invitations have been made When the user has only one venue creates only one stat
     Failure/Error: ReferralStat.refresh_view
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:14:in `block (4 levels) in <top (required)>'

  60) ReferralStat When no invitations have been made When the user has only one venue contains a stat with a multiplier equal to 1
     Failure/Error: ReferralStat.refresh_view
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       : REFRESH MATERIALIZED VIEW referral_stats
     # ./app/models/referral_stat.rb:11:in `refresh_view'
     # ./spec/models/referral_stat_spec.rb:14:in `block (4 levels) in <top (required)>'

  61) Api::V1::BookingsController PUT inquiries/:id/accept succeeds
     Failure/Error: expect(response.status).to eq(201)
       
       expected: 201
            got: 400
       
       (compared using ==)
     # ./spec/controllers/api/bookings_controller_spec.rb:26:in `block (3 levels) in <top (required)>'

  62) Api::V1::BookingsController PUT inquiries/:id/accept changes the status of the booking, to pending payment
     Failure/Error: expect(@booking.pending_payment?).to eq(true)
       
       expected: true
            got: false
       
       (compared using ==)
     # ./spec/controllers/api/bookings_controller_spec.rb:32:in `block (3 levels) in <top (required)>'

  63) Api::V1::BookingsController PUT inquiries/:id/accept adds a new message to the inquiry
     Failure/Error: expect(@booking.messages.count).to eq(old_messages_count + 1)
       
       expected: 1
            got: 0
       
       (compared using ==)
     # ./spec/controllers/api/bookings_controller_spec.rb:39:in `block (3 levels) in <top (required)>'

  64) Api::V1::SpacesController GET spaces when no spaces exist does not retrieve any space
     Failure/Error: get :index
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT COUNT(*) FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (venues.status IN (1,2))
     # ./app/controllers/api/v1/api_controller.rb:8:in `render_result'
     # ./app/controllers/api/v1/spaces_controller.rb:9:in `index'
     # ./spec/controllers/api/spaces_controller_spec.rb:59:in `block (4 levels) in <top (required)>'

  65) Api::V1::SpacesController GET spaces when a space exists should paginate spaces
     Failure/Error: get :index, page: page, amount: amount
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT COUNT(*) FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (venues.status IN (1,2))
     # ./app/controllers/api/v1/api_controller.rb:8:in `render_result'
     # ./app/controllers/api/v1/spaces_controller.rb:9:in `index'
     # ./spec/controllers/api/spaces_controller_spec.rb:39:in `block (4 levels) in <top (required)>'

  66) Api::V1::SpacesController GET spaces when a space exists does not paginate spaces outside limits
     Failure/Error: get :index, page: 2, amount: size
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT COUNT(*) FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (venues.status IN (1,2))
     # ./app/controllers/api/v1/api_controller.rb:8:in `render_result'
     # ./app/controllers/api/v1/spaces_controller.rb:9:in `index'
     # ./spec/controllers/api/spaces_controller_spec.rb:49:in `block (4 levels) in <top (required)>'

  67) Api::V1::SpacesController GET spaces when a space exists should retrieve spaces ordered by name
     Failure/Error: get :index
     ActiveRecord::StatementInvalid:
       PG::UndefinedTable: ERROR:  relation "referral_stats" does not exist
       LINE 1: ...enues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_s...
                                                                    ^
       : SELECT COUNT(*) FROM "spaces" INNER JOIN "venues" ON "venues"."id" = "spaces"."venue_id" LEFT OUTER JOIN referral_stats on referral_stats.venue_id = venues.id WHERE "spaces"."active" = 't' AND (venues.status IN (1,2))
     # ./app/controllers/api/v1/api_controller.rb:8:in `render_result'
     # ./app/controllers/api/v1/spaces_controller.rb:9:in `index'
     # ./spec/controllers/api/spaces_controller_spec.rb:24:in `block (4 levels) in <top (required)>'

Finished in 26.85 seconds (files took 3.32 seconds to load)
620 examples, 67 failures

Failed examples:

rspec ./spec/models/space_search_spec.rb:350 # SpaceSearch search setting only capacity_max returns every space
rspec ./spec/models/space_search_spec.rb:338 # SpaceSearch search setting only capacity_max returns the spaces with capacity lower or equal than 3 when setted to 3
rspec ./spec/models/space_search_spec.rb:345 # SpaceSearch search setting only capacity_max returns an empty array when there are no spaces with that capacity
rspec ./spec/models/space_search_spec.rb:331 # SpaceSearch search setting only capacity_max returns the spaces with capacity lower or equal than 4 when setted to 4
rspec ./spec/models/space_search_spec.rb:267 # SpaceSearch search setting only venue_professions returns every space
rspec ./spec/models/space_search_spec.rb:257 # SpaceSearch search setting only venue_professions returns the spaces that contains 'entertainment'
rspec ./spec/models/space_search_spec.rb:262 # SpaceSearch search setting only venue_professions returns the spaces that contains 'entertainment' or 'technology'
rspec ./spec/models/space_search_spec.rb:252 # SpaceSearch search setting only venue_professions returns the spaces that contains 'technology'
rspec ./spec/models/space_search_spec.rb:376 # SpaceSearch search setting only quantity returns every space
rspec ./spec/models/space_search_spec.rb:366 # SpaceSearch search setting only quantity returns the spaces with quantity greater than 2 when setted to 3
rspec ./spec/models/space_search_spec.rb:371 # SpaceSearch search setting only quantity returns an empty array when there are no spaces with that quantity
rspec ./spec/models/space_search_spec.rb:361 # SpaceSearch search setting only quantity returns the spaces with quantity greater than 3 when setted to 4
rspec ./spec/models/space_search_spec.rb:402 # SpaceSearch search setting only weekday returns every space
rspec ./spec/models/space_search_spec.rb:392 # SpaceSearch search setting only weekday returns the spaces with venue hours weekday 1
rspec ./spec/models/space_search_spec.rb:397 # SpaceSearch search setting only weekday returns an empty array when there are no spaces with that weekday
rspec ./spec/models/space_search_spec.rb:387 # SpaceSearch search setting only weekday returns the spaces with venue hours weekday 0
rspec ./spec/models/space_search_spec.rb:241 # SpaceSearch search setting only venue_amenities returns every space
rspec ./spec/models/space_search_spec.rb:231 # SpaceSearch search setting only venue_amenities returns the spaces that contains 'cafe_restaurant'
rspec ./spec/models/space_search_spec.rb:236 # SpaceSearch search setting only venue_amenities returns the spaces with 'gym' and 'wifi'
rspec ./spec/models/space_search_spec.rb:226 # SpaceSearch search setting only venue_amenities returns the spaces that contains 'wifi'
rspec ./spec/models/space_search_spec.rb:115 # SpaceSearch search setting only space_types returns the spaces with :hot_desk
rspec ./spec/models/space_search_spec.rb:131 # SpaceSearch search setting only space_types returns the spaces with :conference_room
rspec ./spec/models/space_search_spec.rb:142 # SpaceSearch search setting only space_types returns every space
rspec ./spec/models/space_search_spec.rb:121 # SpaceSearch search setting only space_types returns the spaces with :private_office
rspec ./spec/models/space_search_spec.rb:126 # SpaceSearch search setting only space_types returns the spaces with :meeting_room
rspec ./spec/models/space_search_spec.rb:136 # SpaceSearch search setting only space_types returns the spaces with :private_office or :hot_desk
rspec ./spec/models/space_search_spec.rb:189 # SpaceSearch search setting only venue_types returns the spaces with :apartment
rspec ./spec/models/space_search_spec.rb:209 # SpaceSearch search setting only venue_types returns the spaces with :design_studio or :startup_office
rspec ./spec/models/space_search_spec.rb:169 # SpaceSearch search setting only venue_types returns the spaces with :corporate_office
rspec ./spec/models/space_search_spec.rb:184 # SpaceSearch search setting only venue_types returns the spaces with :coworking_space
rspec ./spec/models/space_search_spec.rb:194 # SpaceSearch search setting only venue_types returns the spaces with :house
rspec ./spec/models/space_search_spec.rb:164 # SpaceSearch search setting only venue_types returns the spaces with :business_center
rspec ./spec/models/space_search_spec.rb:154 # SpaceSearch search setting only venue_types returns the spaces with :startup_office
rspec ./spec/models/space_search_spec.rb:159 # SpaceSearch search setting only venue_types returns the spaces with :design_studio
rspec ./spec/models/space_search_spec.rb:179 # SpaceSearch search setting only venue_types returns the spaces with :loft
rspec ./spec/models/space_search_spec.rb:215 # SpaceSearch search setting only venue_types returns every space
rspec ./spec/models/space_search_spec.rb:199 # SpaceSearch search setting only venue_types returns the spaces with :cafe
rspec ./spec/models/space_search_spec.rb:204 # SpaceSearch search setting only venue_types returns the spaces with :restaurant
rspec ./spec/models/space_search_spec.rb:174 # SpaceSearch search setting only venue_types returns the spaces with :hotel
rspec ./spec/models/space_search_spec.rb:320 # SpaceSearch search setting only capacity_min returns every space
rspec ./spec/models/space_search_spec.rb:310 # SpaceSearch search setting only capacity_min returns the spaces with capacity greater than 2 when setted to 3
rspec ./spec/models/space_search_spec.rb:315 # SpaceSearch search setting only capacity_min returns an empty array when there are no spaces with that capacity
rspec ./spec/models/space_search_spec.rb:305 # SpaceSearch search setting only capacity_min returns the spaces with capacity greater than 3 when setted to 4
rspec ./spec/models/space_search_spec.rb:451 # SpaceSearch search setting multiple fields returns the spaces ordered by quantity_reviews and rating
rspec ./spec/models/space_search_spec.rb:442 # SpaceSearch search setting multiple fields returns the spaces with weekday monday, startup_office, 'wifi', and a conference_room
rspec ./spec/models/space_search_spec.rb:431 # SpaceSearch search setting only date returns every space
rspec ./spec/models/space_search_spec.rb:419 # SpaceSearch search setting only date returns the spaces with venue hours with weekday tuesday
rspec ./spec/models/space_search_spec.rb:425 # SpaceSearch search setting only date returns an empty array when there are no spaces with weekday sunday
rspec ./spec/models/space_search_spec.rb:413 # SpaceSearch search setting only date returns the spaces with venue hours with weekday monday
rspec ./spec/models/space_search_spec.rb:293 # SpaceSearch search setting only latitude and longitude returns every space
rspec ./spec/models/space_search_spec.rb:283 # SpaceSearch search setting only latitude and longitude returns the spaces between (5,5) and (25, 25)
rspec ./spec/models/space_search_spec.rb:288 # SpaceSearch search setting only latitude and longitude returns an empty array between (0,0) and (5, 5)
rspec ./spec/models/space_search_spec.rb:278 # SpaceSearch search setting only latitude and longitude returns the spaces between (5,5) and (15, 15)
rspec ./spec/models/referral_stat_spec.rb:60 # ReferralStat When invitations were made When an invitation has been accepted should set the multiplier equal to #accepted_invitations/#total_accepted_invitations
rspec ./spec/models/referral_stat_spec.rb:75 # ReferralStat When invitations were made When an invitation was accepted more than a month ago does not take into account the invitation
rspec ./spec/models/referral_stat_spec.rb:48 # ReferralStat When invitations were made When no invitation has been accepted Keeps the user's venue multiplier equal to 1
rspec ./spec/models/referral_stat_spec.rb:34 # ReferralStat When no invitations have been made When the user has more than one venue creates one stat per venue
rspec ./spec/models/referral_stat_spec.rb:29 # ReferralStat When no invitations have been made When the user has more than one venue creates a stat with a multiplier equal to 1 for all venues
rspec ./spec/models/referral_stat_spec.rb:20 # ReferralStat When no invitations have been made When the user has only one venue creates only one stat
rspec ./spec/models/referral_stat_spec.rb:17 # ReferralStat When no invitations have been made When the user has only one venue contains a stat with a multiplier equal to 1
rspec ./spec/controllers/api/bookings_controller_spec.rb:24 # Api::V1::BookingsController PUT inquiries/:id/accept succeeds
rspec ./spec/controllers/api/bookings_controller_spec.rb:29 # Api::V1::BookingsController PUT inquiries/:id/accept changes the status of the booking, to pending payment
rspec ./spec/controllers/api/bookings_controller_spec.rb:35 # Api::V1::BookingsController PUT inquiries/:id/accept adds a new message to the inquiry
rspec ./spec/controllers/api/spaces_controller_spec.rb:62 # Api::V1::SpacesController GET spaces when no spaces exist does not retrieve any space
rspec ./spec/controllers/api/spaces_controller_spec.rb:36 # Api::V1::SpacesController GET spaces when a space exists should paginate spaces
rspec ./spec/controllers/api/spaces_controller_spec.rb:47 # Api::V1::SpacesController GET spaces when a space exists does not paginate spaces outside limits
rspec ./spec/controllers/api/spaces_controller_spec.rb:23 # Api::V1::SpacesController GET spaces when a space exists should retrieve spaces ordered by name

Randomized with seed 26438

Coverage report generated for RSpec to /home/agustinaaldasoro/Documents/deskspotting/coverage. 1439 / 1693 LOC (85.0%) covered.
